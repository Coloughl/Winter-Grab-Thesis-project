scale_shape_manual(values = c("Summer" = 21, "Spring" = 22, "Winter" = 24)) +
guides(
fill = guide_legend(
override.aes = list(shape = 21, color = "black")
)
) +
geom_point(size = 8, alpha = 0.7) +  # Black outline for points, fill color by Season
geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "darkgray", linewidth = 3)+
facet_wrap(~ Lake.x) +
theme_classic(base_size = 14) +
theme(
# axis text
axis.title.x     = element_text(size = 24),
axis.title.y     = element_text(size = 24),
axis.text.x      = element_text(size = 22, margin = margin(t = 6, r = 0, b = 6, l = 0)),
axis.text.y      = element_text(size = 22, margin = margin(t = 0, r = 6, b = 0, l = 6)),
# legend
legend.title     = element_text(size = 28),
legend.text      = element_text(size = 20),
# facet text
strip.text.x     = element_text(size = 24, face = "bold"),
# box around each panel
panel.border     = element_rect(color = "black", fill = NA, size = 1),
# spacing between panels
panel.spacing    = unit(0.5, "cm")
)
View(hix_summary)
View(WG_EEMs)
hix_mod <- aov(hix ~ Year + Season + Lake, WG_EEMs)
str(WG_EEMs)
WG_EEMs$date <- as.Date(WG_EEMs$date, format = "%Y-%m-%d")   # adjust format if needed
WG_EEMs$Year <- as.integer(format(WG_EEMs$date, "%Y"))
?as.date
??as.Date
#Loading in Data ----
EEMs <- read.csv("1-Data/CDOM/Winter grab/EEMs.csv")
#Fetching and setting Working directory
getwd()
setwd("C:/Users/ccolo/OneDrive/Documents/GitHub/Winter-Grab-Thesis-project/")
#Loading in Data ----
EEMs <- read.csv("1-Data/CDOM/Winter grab/EEMs.csv")
WG_EEMs$date <- as.Date(WG_EEMs$date, format = "%d%b%Y")   # adjust format if needed
WG_EEMs$Year <- as.integer(format(WG_EEMs$date, "%Y"))
#Loading in Data ----
EEMs <- read.csv("1-Data/CDOM/Winter grab/EEMs.csv")
Sites <- read_excel("1-Data/WG2_Sites.xlsx")
#Merging EEMs data with Sites ----
WG_EEMs <- EEMs %>%
left_join(Sites,
by = "Station",
relationship = "many-to-one")
#Making Seasons and Years
EEMs_seasoned <- WG_EEMs %>%
mutate(
# 1) Month abbreviation (e.g. "Feb", "May", etc.)
month_abbrev = str_extract(date, "[A-Za-z]{3}"),
# 2) Year: last two digits, coerced to 2000-series
year2        = str_extract(date, "\\d{2}$"),
Year         = as.integer(paste0("20", year2)),
# 3) Season based on month_abbrev
Season = case_when(
month_abbrev %in% c("Feb", "Mar")    ~ "Winter",
month_abbrev == "May"                ~ "Spring",
month_abbrev %in% c("Jun", "Aug")    ~ "Summer",
TRUE                                 ~ NA_character_
)
) %>%
# (optional) drop helpers if you only want date, year, season
select(-month_abbrev, -year2)
EEMs_seasoned$date <- as.Date(EEMs_seasoned$date, format = "%d-%b-%y")
View(EEMs_seasoned)
# If any dates parsed before 1970, bump them into 2000s:
EEMs_seasoned$date <- ifelse(
EEMs_seasoned$date < as.Date("1960-01-01"),
EEMs_seasoned$date + years(100),
EEMs_seasoned$date)   # adjust format if needed
EEMs_seasoned$Year <- as.integer(format(EEMs_seasoned$date, "%Y"))
hix_mod <- aov(hix ~ Year + Season + Lake, EEMs_seasoned)
summary(hix_mod)
hix_mod <- aov(hix ~ Year + Lake*Season, EEMs_seasoned)
summary(hix_mod)
hix_mod <- aov(hix ~ Lake*Year + Lake*Season, EEMs_seasoned)
summary(hix_mod)
hix_mod <- aov(hix ~ Season*Year + Lake*Season, EEMs_seasoned)
summary(hix_mod)
hix_mod <- aov(hix ~ Year + Lake*Season, EEMs_seasoned)
summary(hix_mod)
m_season <- lm(
Leu.TdR ~ Chla*Season + P.ug.L + NH4_ug.L + NPOC + hix,
data   = master_mod,
REML   = FALSE
)
AIC(m_season)
summary(m_season)
AIC(full_ml2, m_season)
final_mod <- update(m_season, REML = TRUE)
summary(final_mod)
r.squaredGLMM(final_mod)
slopes <- emtrends(final_mod, ~ Season, var = "Chla")
summary(slopes)
emmip(final_mod, Season ~ Chla, CIs = TRUE) +
labs(x = "Chla (µg L⁻¹)",
y = "Predicted Leu.TdR (nmol L⁻¹ d⁻¹)",
colour = "Season") +
theme_minimal(base_size = 14)
newdata <- expand_grid(
Chla      = seq(min(master_mod$Chla), max(master_mod$Chla), length.out = 50),
Season    = factor(c("Summer","Spring"), levels = levels(master_mod$Season)),
`P.ug.L`  = mean(master_mod$P.ug.L, na.rm=TRUE),
NH4_ug.L  = mean(master_mod$NH4_ug.L, na.rm=TRUE),
NPOC      = mean(master_mod$NPOC, na.rm=TRUE),
hix       = mean(master_mod$hix, na.rm=TRUE)
)
newdata$pred <- predict(final_mod, newdata, re.form = NA)
ggplot(newdata, aes(x = Chla, y = pred, colour = Season)) +
geom_line(size = 1.2) +
geom_ribbon(aes(ymin = pred - 1.96 * predict(final_mod, newdata, re.form = NA, se.fit = TRUE)$se.fit,
ymax = pred + 1.96 * predict(final_mod, newdata, re.form = NA, se.fit = TRUE)$se.fit),
alpha = 0.2) +
labs(x = "Chlorophyll-a (µg L⁻¹)",
y = "Predicted Leu:TdR",
colour = "Season") +
theme_classic(base_size = 14) +
theme(
# axis text
axis.title.x     = element_text(size = 24),
axis.title.y     = element_text(size = 24),
axis.text.x      = element_text(size = 22, margin = margin(t = 6, r = 0, b = 6, l = 0)),
axis.text.y      = element_text(size = 22, margin = margin(t = 0, r = 6, b = 0, l = 6)),
# legend
legend.title     = element_text(size = 28),
legend.text      = element_text(size = 20))
m_season <- lmer(
Leu.TdR ~ Chla*Season + P.ug.L + NH4_ug.L + NPOC + hix,
data   = master_mod,
REML   = FALSE
)
AIC(m_season)
summary(m_season)
View(master_mod)
View(Chla)
View(master_clean)
ggplot(EEMs_seasoned)+
geom_histogram(aes(`Leu:TdR`))
ggplot(EEMs_seasoned)+
geom_histogram(aes(hix))
clean_EEMs <- EEMs_seasoned %>%
# 1. compute the z‐score for Leu.TdR
mutate(z_hix = (hix - mean(hix, na.rm = TRUE)) /
sd(hix, na.rm = TRUE)) %>%
# 2. keep only those with |z| ≤ cutoff
filter(abs(z_hix) <= z_cutoff) %>%
# 3. drop the helper column if you like
select(-z_hix)
z_cutoff <- 3
clean_EEMs <- EEMs_seasoned %>%
# 1. compute the z‐score for Leu.TdR
mutate(z_hix = (hix - mean(hix, na.rm = TRUE)) /
sd(hix, na.rm = TRUE)) %>%
# 2. keep only those with |z| ≤ cutoff
filter(abs(z_hix) <= z_cutoff) %>%
# 3. drop the helper column if you like
select(-z_hix)
ggplot(EEMs_seasoned)+
geom_histogram(aes(hix))
View(EEMs_seasoned)
ggplot(clean_EEMs)+
geom_histogram(aes(hix))
hix_mod <- aov(hix ~ Year + Lake*Season, clean_EEMs)
summary(hix_mod)
hix_mod <- aov(hix ~ Year*Season + Lake*Season, clean_EEMs)
summary(hix_mod)
hix_mod <- aov(hix ~ Year*Season + Lake, clean_EEMs)
summary(hix_mod)
bix_summary <- master_clean %>%
mutate(SeasonYear = paste(Season, Year)) %>%
group_by(Lake, SeasonYear) %>%
summarise(
n       = sum(!is.na(bix)),
mean_b  = mean(bix, na.rm = TRUE),
se_b    = sd(bix,   na.rm = TRUE)/sqrt(n),
.groups = "drop"
) %>%
mutate(
SeasonYear = factor(SeasonYear,
levels = c("Winter 2024","Spring 2024","Summer 2024","Winter 2025")
)
)
View(bix_summary)
hix_summary <- EEMs_seasoned %>%
mutate(SeasonYear = paste(Season, Year)) %>%
group_by(Lake, SeasonYear) %>%
summarise(
n        = sum(!is.na(hix)),
mean_hix = mean(hix, na.rm = TRUE),
se_hix   = sd(hix,   na.rm = TRUE) / sqrt(n),
.groups  = "drop"
) %>%
mutate(
SeasonYear = factor(SeasonYear,
levels = c("Winter 2024","Spring 2024","Summer 2024","Winter 2025")
)
)
bix_summary <- EEMs_seasoned %>%
mutate(SeasonYear = paste(Season, Year)) %>%
group_by(Lake, SeasonYear) %>%
summarise(
n       = sum(!is.na(bix)),
mean_b  = mean(bix, na.rm = TRUE),
se_b    = sd(bix,   na.rm = TRUE)/sqrt(n),
.groups = "drop"
) %>%
mutate(
SeasonYear = factor(SeasonYear,
levels = c("Winter 2024","Spring 2024","Summer 2024","Winter 2025")
)
)
View(bix_summary)
offset <- 0.05 * max(hix_summary$mean_hix, na.rm = TRUE)
ggplot(hix_summary, aes(x = Lake, y = mean_hix, fill = SeasonYear)) +
geom_col(
position = position_dodge(width = 0.8),
width    = 0.7,
color    = "black"
) +
geom_errorbar(
aes(ymin = mean_hix - se_hix, ymax = mean_hix + se_hix),
width    = 0.2,
position = position_dodge(width = 0.8)
) +
geom_text(
aes(
label = paste0("n=", n),
y     = mean_hix + se_hix + offset
),
position = position_dodge(width = 0.8),
vjust    = 0,
size     = 4,
fontface = "bold"
) +
scale_fill_manual(values = c(
"Winter 2024" = "#87CEDA",
"Spring 2024" = "#B6798F",
"Summer 2024" = "#E50245",
"Winter 2025" = "#6BDACF"
)) +
labs(
x    = "Lake",
y    = "Mean HIX (±SE)",
fill = "Season & Year"
) +
theme_classic(base_size = 14) +
theme(
axis.text.x   = element_text(angle = 45, hjust = 1, size = 22),
axis.text.y   = element_text(size = 22),
axis.title    = element_text(size = 24),
legend.title  = element_text(size = 28),
legend.text   = element_text(size = 20),
panel.border  = element_rect(colour = "black", fill = NA, size = 0.5),
panel.spacing = unit(0.6, "cm")
)
View(EEMs_seasoned)
hix_summary <- hix_summary %>%
mutate(
Lake = as.character(Lake),  # if it’s a factor, turn it into character first
Lake = if_else(
is.na(Lake) | Lake == "Lake NA",
"Lake Erie",
Lake
),
Lake = factor(Lake)         # back to factor if you want
) %>%
mutate(
Year = as.character(Year),
Year = if_else(
is.na(Year) & Season %in% c("Spring","Summer"),
"2024",
Year
),
Year = factor(Year, levels = c("2024","2025"))
) %>%
mutate(
Lake = case_when(
Lake %in% c("Lake St. Clair", "Lake St Clair") ~ "Lake St. Clair",
TRUE                                          ~ Lake
)
)
View(hix_summary)
EEMs_seasoned <- EEMs_seasoned %>%
mutate(
# 1) Remove any leading “Lake ” if present
Lake = str_remove(Lake, "^Lake\\s*"),
# 2) Trim whitespace (in case there were leading/trailing spaces)
Lake = str_trim(Lake),
# 3) Re-add the prefix so every entry reads “Lake XYZ”
Lake = paste("Lake", Lake)
) %>%
mutate(
Lake = as.character(Lake),  # if it’s a factor, turn it into character first
Lake = if_else(
is.na(Lake) | Lake == "Lake NA",
"Lake Erie",
Lake
),
Lake = factor(Lake)         # back to factor if you want
) %>%
mutate(
Year = as.character(Year),
Year = if_else(
is.na(Year) & Season %in% c("Spring","Summer"),
"2024",
Year
),
Year = factor(Year, levels = c("2024","2025"))
) %>%
mutate(
Lake = case_when(
Lake %in% c("Lake St. Clair", "Lake St Clair") ~ "Lake St. Clair",
TRUE                                          ~ Lake
)
)
View(EEMs_seasoned)
hix_summary <- EEMs_seasoned %>%
mutate(SeasonYear = paste(Season, Year)) %>%
group_by(Lake, SeasonYear) %>%
summarise(
n        = sum(!is.na(hix)),
mean_hix = mean(hix, na.rm = TRUE),
se_hix   = sd(hix,   na.rm = TRUE) / sqrt(n),
.groups  = "drop"
) %>%
mutate(
SeasonYear = factor(SeasonYear,
levels = c("Winter 2024","Spring 2024","Summer 2024","Winter 2025")
)
)
bix_summary <- EEMs_seasoned %>%
mutate(SeasonYear = paste(Season, Year)) %>%
group_by(Lake, SeasonYear) %>%
summarise(
n       = sum(!is.na(bix)),
mean_b  = mean(bix, na.rm = TRUE),
se_b    = sd(bix,   na.rm = TRUE)/sqrt(n),
.groups = "drop"
) %>%
mutate(
SeasonYear = factor(SeasonYear,
levels = c("Winter 2024","Spring 2024","Summer 2024","Winter 2025")
)
)
View(bix_summary)
offset <- 0.05 * max(hix_summary$mean_hix, na.rm = TRUE)
ggplot(hix_summary, aes(x = Lake, y = mean_hix, fill = SeasonYear)) +
geom_col(
position = position_dodge(width = 0.8),
width    = 0.7,
color    = "black"
) +
geom_errorbar(
aes(ymin = mean_hix - se_hix, ymax = mean_hix + se_hix),
width    = 0.2,
position = position_dodge(width = 0.8)
) +
geom_text(
aes(
label = paste0("n=", n),
y     = mean_hix + se_hix + offset
),
position = position_dodge(width = 0.8),
vjust    = 0,
size     = 4,
fontface = "bold"
) +
scale_fill_manual(values = c(
"Winter 2024" = "#87CEDA",
"Spring 2024" = "#B6798F",
"Summer 2024" = "#E50245",
"Winter 2025" = "#6BDACF"
)) +
labs(
x    = "Lake",
y    = "Mean HIX (±SE)",
fill = "Season & Year"
) +
theme_classic(base_size = 14) +
theme(
axis.text.x   = element_text(angle = 45, hjust = 1, size = 22),
axis.text.y   = element_text(size = 22),
axis.title    = element_text(size = 24),
legend.title  = element_text(size = 28),
legend.text   = element_text(size = 20),
panel.border  = element_rect(colour = "black", fill = NA, size = 0.5),
panel.spacing = unit(0.6, "cm")
)
hix_mod <- aov(hix ~ Year*Season + Lake, clean_EEMs)
summary(hix_mod)
bix_plot <- ggplot(bix_summary, aes(Lake, mean_b, fill = SeasonYear)) +
geom_col(position = position_dodge(0.8), width = 0.7, color = "black") +
geom_errorbar(aes(ymin = mean_b - se_b, ymax = mean_b + se_b),
width = 0.2, position = position_dodge(0.8)) +
geom_text(aes(label = paste0("n=",n),
y     = mean_b + se_b + 0.05*max(mean_b)),
position = position_dodge(0.8), vjust = 0, size = 4) +
scale_fill_manual(values = c(
"Winter 2024" = "#87CEDA",
"Spring 2024" = "#B6798F",
"Summer 2024" = "#E50245",
"Winter 2025" = "#6BDACF"
)) +
labs(x = NULL, y = "Mean BIX (±SE)", fill = "Season & Year") +
theme_classic(base_size = 14) +
theme(
axis.text.x   = element_text(angle = 45, hjust = 1, size = 12),
axis.text.y   = element_text(size = 12),
axis.title    = element_text(size = 14),
legend.position = "none",             # hide second legend
panel.border  = element_rect(color = "black", fill = NA),
panel.spacing = unit(0.5, "cm")
)
ggplot(bix_summary, aes(Lake, mean_b, fill = SeasonYear)) +
geom_col(position = position_dodge(0.8), width = 0.7, color = "black") +
geom_errorbar(aes(ymin = mean_b - se_b, ymax = mean_b + se_b),
width = 0.2, position = position_dodge(0.8)) +
geom_text(aes(label = paste0("n=",n),
y     = mean_b + se_b + 0.05*max(mean_b)),
position = position_dodge(0.8), vjust = 0, size = 4) +
scale_fill_manual(values = c(
"Winter 2024" = "#87CEDA",
"Spring 2024" = "#B6798F",
"Summer 2024" = "#E50245",
"Winter 2025" = "#6BDACF"
)) +
labs(x = NULL, y = "Mean BIX (±SE)", fill = "Season & Year") +
theme_classic(base_size = 14) +
theme(
axis.text.x   = element_text(angle = 45, hjust = 1, size = 12),
axis.text.y   = element_text(size = 12),
axis.title    = element_text(size = 14),
legend.position = "none",             # hide second legend
panel.border  = element_rect(color = "black", fill = NA),
panel.spacing = unit(0.5, "cm")
)
View(bix_summary)
View(EEMs)
hix_mod <- aov(hix ~ Year:Season + Lake, clean_EEMs)
summary(hix_mod)
hix_mod <- aov(hix ~ Year:Season, clean_EEMs)
summary(hix_mod)
hix_mod <- aov(hix ~ Year*Season, clean_EEMs)
summary(hix_mod)
hix_mod <- aov(hix ~ Year*Lake, clean_EEMs)
summary(hix_mod)
hix_mod <- aov(hix ~ Year*Season, clean_EEMs)
summary(hix_mod)
View(EEMs_seasoned)
View(WG_BP)
mod <- aov(`Leu.TdR` ~ Lake.x + Year*Season, data = WG_BP)
summary(mod)
Anova(mod, type = 2)
mod <- aov(`Leu.TdR` ~ Lake.x + Year:Season, data = WG_BP)
summary(mod)
mod <- aov(`Leu.TdR` ~ Lake.x*Year + Season, data = WG_BP)
summary(mod)
mod <- aov(`Leu.TdR` ~ Lake.x*Year + Lake.x*Season, data = WG_BP)
summary(mod)
mod <- aov(`Leu.TdR` ~ Lake.x + Year + Lake.x*Season, data = WG_BP)
summary(mod)
Anova(mod, type = 2)
mod <- aov(`Leu.TdR` ~ Lake.x + Year + Season, data = WG_BP)
summary(mod)
Anova(mod, type = 2)
preds <- c("Chla", "SUVA254", "Nox.N.ug.L", "P.ug.L", "TN", "NPOC", "NH4_ug.L", "hix", "bix")
uni_results <- map_df(preds, function(var) {
# build formula safely now that var is syntactic
f  <- reformulate(c(var, "(1|Season)", "(1|Lake)"), response = "Leu.TdR")
m  <- lmer(f, data = master_scaled, REML = FALSE)
ss <- summary(m)$coefficients
tibble(
predictor = var,
AIC       = AIC(m),
estimate  = ss[var, "Estimate"],
se        = ss[var, "Std. Error"],
t.value   = ss[var, "t value"]
)
})
print(uni_results)
full_ml <- lmer(
Leu.TdR ~ Chla + `P.ug.L` + NPOC + hix + Nox.N.ug.L + SUVA254 +
(1|Lake) + (1|Season),
data   = master_scaled,
REML   = FALSE
)
summary(full_ml)
drop1(full_ml, test = "Chisq")
AIC(full_ml)
full_ml2 <- lmer(
Leu.TdR ~ Chla + `P.ug.L` + NPOC + hix + Nox.N.ug.L +
(1|Lake) + (1|Season),
data   = master_scaled,
REML   = FALSE
)
summary(full_ml2)
AIC(full_ml2)
full_ml2 <- lmer(
Leu.TdR ~ Chla:Season + `P.ug.L` + NPOC + hix + Nox.N.ug.L +
(1|Lake) + (1|Season),
data   = master_scaled,
REML   = FALSE
)
summary(full_ml2)
AIC(full_ml2)
View(master_clean)
